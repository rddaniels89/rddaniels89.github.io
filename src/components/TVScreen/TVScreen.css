/***************************************
 *  Retro TV Layout with Aspect-Ratio
 ***************************************/

/* The container that holds the TV image */
.tv-frame-container {
  /* By default, assume the device is wide enough for height-based sizing */
  height: 100vh;
  width: calc(100vh * 1.5); /* 1.5:1 ratio, tweak if your TV image differs */
  
  /* Center the container horizontally if you like */
  margin: 0 auto;
  display: flex;
  justify-content: center;
  align-items: center;
  
  /* TV image background */
  background: url("../../assets/tvScreen.png") no-repeat center;
  background-size: cover;
  
  /* Overflow hidden to prevent scrollbars if the image overflows slightly */
  overflow: hidden;
  position: relative;
  /* Optional: you can set a max-width if it gets too big on ultra-wide screens */
  /* max-width: 2000px; */
}

/* The inner 'screen' area within the TV */
.tv-screen {
  /* Absolutely positioned relative to .tv-frame-container */
  position: absolute;
  
  /* Adjust these to align the "screen" portion with the TV graphic */
  top: 1%;    /* move down from top edge */
  left: 8%;   /* move right from left edge */
  width: 66%;
  height: 86%;
  
  background-color: var(--background-color, #333);
  border-radius: 95px 20px 10px 15px;
  box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.7);
  
  /* Layout for screen content */
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  
  padding: 20px;
  overflow-y: auto;
  overflow-x: auto; /* Enable horizontal scrolling if content is wider */
}

/* Example content area inside the screen */
.tv-content {
  width: 90%;
  height: 100%;
}

/* Scrollbar styling (optional) */
.tv-screen::-webkit-scrollbar {
  width: 8px;
}
.tv-screen::-webkit-scrollbar-thumb {
  background-color: rgba(255, 102, 0, 0.8);
  border-radius: 4px;
}
.tv-screen::-webkit-scrollbar-track {
  background-color: rgba(0, 0, 0, 0.2);
}

/* Title styling (optional) */
.tv-screen h1 {
  color: var(--accent-color, #ff6600);
  font-family: 'Press Start 2P', sans-serif;
  text-align: center;
  margin: 0;
  padding-bottom: 15px;
  margin-top: 0;
  position: relative;
  letter-spacing: 0.5px;
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  display: block;
}

/* 
  If the device is narrower than 1.5:1, 
  switch to width-based sizing so the TV 
  doesn't overflow horizontally.
  (3/2 is the fraction form of 1.5.)
*/
@media (max-aspect-ratio: 3/2) {
  .tv-frame-container {
    width: 100vw;
    height: calc(100vw / 1.5);
  }
}

/* 
  You can also add a min-aspect-ratio if you want the container 
  to never exceed a certain height-based ratio, e.g.:
  @media (min-aspect-ratio: 16/9) { ... } 
  but often the max-aspect-ratio is enough.
*/

/* OPTIONAL: Additional breakpoints if you want more fine-tuning */
@media (max-width: 1024px) {
  .tv-screen {
    /* Adjust the screen if it misaligns at ~tablet sizes */
    top: 2%;
    left: 8%;
    width: 65%;
    height: 84%;
    padding: 15px;
    border-top-left-radius: 50px;
    font-size: 1.25rem;
  }
  .carousel-container {
    transform: scale(0.75);
    /* You might need to adjust the container's height/width or overflow after scaling */
    transform-origin: top center;
  }
}

@media (max-width: 768px) {
  .tv-screen {
    /* Tweak for smaller tablets/phones if needed */
    top: 2%;
    left: 8%;
    width: 65%;
    height: 84%;
    padding: 15px;
    border-top-left-radius: 50px;
    font-size: 1rem;
  }
  .carousel-container {
    transform: scale(0.65);
    /* You might need to adjust the container's height/width or overflow after scaling */
    transform-origin: top left;
  }
}

@media (max-width: 480px) {
  .tv-screen {
    /* Tweak further for very narrow phones if you like */
    top: 2%;
    left: 8%;
    width: 62%;
    height: 78%;
    padding: 15px;
    border-top-left-radius: 30px;
    font-size: .9rem;
  }
  .carousel-container {
    transform: scale(0.55);
    /* You might need to adjust the container's height/width or overflow after scaling */
    transform-origin: top left;
  }
}

.terminal-frame-container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
  background: #1a1a1a;
  border-radius: 10px;
  box-shadow: 0 0 20px rgba(0, 255, 255, 0.2);
}

.terminal-screen {
  background: #000;
  border: 2px solid #00ffff;
  border-radius: 8px;
  padding: 20px;
  color: #00ffff;
  font-family: 'Courier New', monospace;
  position: relative;
  overflow: hidden;
}

.terminal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
  border-bottom: 1px solid #00ffff;
  margin-bottom: 20px;
}

.terminal-title {
  font-size: 24px;
  font-weight: bold;
  color: #00ffff;
  text-transform: uppercase;
  letter-spacing: 2px;
}

.terminal-controls {
  display: flex;
  gap: 8px;
}

.control-dot {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: #00ffff;
  opacity: 0.7;
}

.terminal-content {
  padding: 20px;
  position: relative;
}

.terminal-label {
  font-size: 20px;
  color: #00ffff;
  margin-bottom: 20px;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.terminal-data {
  background: rgba(0, 255, 255, 0.05);
  padding: 20px;
  border-radius: 5px;
  border: 1px solid rgba(0, 255, 255, 0.2);
}

.terminal-footer {
  margin-top: 20px;
  padding: 10px;
  border-top: 1px solid #00ffff;
}

.terminal-status {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 14px;
}

.status-indicator {
  color: #00ff00;
  font-weight: bold;
}

.status-text {
  color: #00ffff;
  opacity: 0.8;
}

/* Add a subtle scanning effect */
.terminal-screen::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: rgba(0, 255, 255, 0.2);
  animation: scan 2s linear infinite;
}

@keyframes scan {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(100%);
  }
}

/* Add a glowing effect to the border */
.terminal-frame-container {
  animation: glow 2s ease-in-out infinite alternate;
}

@keyframes glow {
  from {
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.2);
  }
  to {
    box-shadow: 0 0 20px rgba(0, 255, 255, 0.4);
  }
}